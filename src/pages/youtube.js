import { useEffect, useState } from 'react';
import Head from 'next/head';
import { Inter } from '@next/font/google';
import axios from 'axios';
import Input from '@/application/component/common/Input';
import { youtubeFeatures } from '@/application/assets/content/youtube';
import { GoDiffRemoved } from 'react-icons/go';
import { MdContentCopy } from 'react-icons/md';
import { BiAddToQueue } from 'react-icons/bi';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
    const [title, setTitle] = useState([]);
    const [initialLoad, setInitialLoad] = useState(true);
    const [tags, setTags] = useState();
    const [loading, setLoading] = useState(false);
    const [selectedIndex, setSelectedIndex] = useState([]);

    useEffect(() => {
        (!loading && tags?.length > 0) && handleSelectAll();
    }, [loading]);

    const handleClick = index => {
        const tagIndex = selectedIndex.indexOf(index);
        if (tagIndex === -1) setSelectedIndex([...selectedIndex, index]);
        else {
            const arr = selectedIndex.filter(i => i !== index);
            setSelectedIndex(arr);
        }
    };

    const handleSelectAll = () => setSelectedIndex(tags.map((tag, index) => index));

    const handleCopy = () => {
        const selectedTags = tags.filter((tags, index) => selectedIndex.includes(index));
        navigator.clipboard.writeText(selectedTags);
    };

    const handleSearch = async () => {
        if (title.trim().length === 0) return;
        setLoading(true);

        const { data } = await axios.get(`https://tags.jee6.in/youtube/tags?q=${title}`);
        if (data?.data) {
            setTags(data.data);
            setLoading(false);
            setSelectedIndex([]);
            setInitialLoad(false);
        }
        else {
            setTags([]);
            setLoading(false);
            setSelectedIndex([]);
            setInitialLoad(false);
        }
    };

    return (
        <>
            <Head>
                <title>Pro Tags</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={`${inter.className}`}>
                <div className='container mx-auto'>
                    <section className='lg:my-[70px] my-[50px]'>
                        <div className='flex justify-center'>
                            <h1 className='text-2xl lg:text-4xl font-bold mx-auto'>Maximize Your YouTube Reach</h1>
                        </div>
                        <div>
                            <Input onChange={(e) => setTitle(e)} onClick={() => handleSearch()} isRequesting={loading} />
                        </div>

                        <div className='flex justify-center my-[50px] flex-wrap lg:w-8/12 w-11/12 mx-auto'>
                            {tags?.length > 0 && !initialLoad && <div className='border flex flex-wrap mx-auto rounded p-5 bg-slate-100 min-w-full'>
                                {tags?.map((tag, index) => {
                                    return (
                                        <div onClick={() => handleClick(index)} key={index} className='flex gap-2  border rounded p-3 m-1 bg-white shadow hover:shadow-md cursor-pointer'>
                                            <span>
                                                <input type={'checkbox'} checked={selectedIndex.indexOf(index) > -1} readOnly className='bg-black' />
                                            </span>
                                            <span>{tag}</span>
                                        </div>
                                    );
                                })}
                            </div>}

                            {tags?.length > 0 && !initialLoad && <div className='flex w-full lg:justify-end justify-center mt-3 gap-2'>
                                <button onClick={() => handleCopy()} className='w-3/12 lg:w-2/12 transition-colors rounded border border-black bg-black text-white hover:bg-white hover:text-black p-1'>
                                    <div className='flex justify-center items-center gap-1'>
                                        <MdContentCopy /><sapn>copy</sapn>
                                    </div>
                                </button>

                                <button onClick={() => handleSelectAll()} className='w-3/12 lg:w-2/12 transition-colors rounded border border-black bg-black text-white hover:bg-white hover:text-black p-1'>
                                    <div className='flex justify-center items-center gap-1'>
                                        <BiAddToQueue /> <span>select</span>
                                    </div>
                                </button>

                                <button onClick={() => setSelectedIndex([])} className='w-3/12 lg:w-2/12 transition-colors rounded border border-black bg-black text-white hover:bg-white hover:text-black p-1'>
                                    <div className='flex justify-center items-center gap-1'>
                                        <GoDiffRemoved /> <span>unselect</span>
                                    </div>
                                </button>
                            </div>}

                            {(tags?.length === 0 || initialLoad) &&
                                <div className='border flex justify-center items-center mx-auto rounded p-5 bg-slate-100 w-full min-w-100 min-h-[150px]'>
                                    <span className='text-slate-500'>
                                        {initialLoad ?
                                            <span>
                                                {tags?.map(tag =>
                                                    <div className='flex gap-2 h-fit border rounded p-3 m-1 bg-white shadow hover:shadow-md cursor-pointer'>
                                                        <span>{tag}</span>
                                                    </div>
                                                )}
                                            </span> :
                                            <span>No Tags Found ðŸ™„</span>}
                                    </span>
                                </div>}
                        </div>
                    </section>

                    <section className='lg:my-[80px] my-[50px]'>
                        <div className='lg:w-[1280px] w-11/12 mx-auto'>
                            <div className='grid my-[30px] grid-cols-1'>
                                <h3 className='text-[23px] lg:text-4xl font-bold mx-auto my-3'>Unleash the Power of YouTube tags</h3>
                                <h6 className='mx-auto mb-5'>Unlock Your Video's True Potential with ProTag</h6>
                            </div>
                            <div className='grid lg:grid-cols-3 grid-cols-1 gap-5'>
                                {youtubeFeatures.map((features, index) => (
                                    <div className='border p-6 rounded bg-white hover:shadow-2xl transition-shadow' style={{ boxShadow: '.2s ease' }} key={index}>
                                        <div className='mb-2'>
                                            <h1 className="text-[1.125em] font-bold">
                                                {features.sortTitle}
                                            </h1>
                                        </div>
                                        <div className='text-[14px]'>
                                            {features.sortDescription}
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>
                    </section>
                </div>
            </main>
        </>
    );
}